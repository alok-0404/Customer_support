# ========================================
# CUSTOMER SUPPORT API - ENVIRONMENT VARIABLES
# ========================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to Git!

# ========================================
# SERVER CONFIGURATION
# ========================================
NODE_ENV=development
PORT=5000

# ========================================
# DATABASE CONFIGURATION
# ========================================
# Local MongoDB
MONGODB_URI=mongodb://localhost:27017/customer_support

# Production MongoDB Atlas (example)
# MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/customer_support?retryWrites=true&w=majority

# ========================================
# JWT CONFIGURATION
# ========================================
# Generate a strong random secret (min 32 characters)
# You can use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_ACCESS_SECRET=your-super-secret-jwt-key-change-this-in-production-min-32-chars
JWT_ACCESS_EXPIRES_IN=15m

# ========================================
# EMAIL CONFIGURATION
# ========================================
# Choose one: Gmail (for testing) OR SendGrid (for production)

# ----------------------------------------
# OPTION 1: GMAIL (For Development/Testing Only)
# ----------------------------------------
# Steps:
# 1. Go to: https://myaccount.google.com/apppasswords
# 2. Generate App Password (16-digit code)
# 3. Use that code below (remove spaces)

# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=your-email@gmail.com
# EMAIL_PASSWORD=your-16-digit-app-password
# EMAIL_FROM=your-email@gmail.com

# ----------------------------------------
# OPTION 2: SENDGRID (Recommended for Production)
# ----------------------------------------
# Steps:
# 1. Create account: https://sendgrid.com/
# 2. Verify Single Sender email (Settings → Sender Authentication)
# 3. Generate API Key (Settings → API Keys)
# 4. Use API key below

EMAIL_HOST=smtp.sendgrid.net
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=apikey
EMAIL_PASSWORD=SG.your-sendgrid-api-key-here
EMAIL_FROM=your-verified-email@gmail.com

# ----------------------------------------
# OPTION 3: AWS SES (For High Volume)
# ----------------------------------------
# EMAIL_HOST=email-smtp.us-east-1.amazonaws.com
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=your-aws-access-key-id
# EMAIL_PASSWORD=your-aws-secret-access-key
# EMAIL_FROM=verified-email@yourdomain.com

# ----------------------------------------
# OPTION 4: OTHER SMTP (Mailgun, Postmark, etc.)
# ----------------------------------------
# Mailgun:
# EMAIL_HOST=smtp.mailgun.org
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=postmaster@your-domain.mailgun.org
# EMAIL_PASSWORD=your-mailgun-smtp-password
# EMAIL_FROM=noreply@yourdomain.com

# ========================================
# APPLICATION SETTINGS
# ========================================
APP_NAME=Customer Support System

# Frontend URL (for password reset links)
# Development:
FRONTEND_URL=http://localhost:3000
# Production:
# FRONTEND_URL=https://yourdomain.com

# ========================================
# SECURITY NOTES
# ========================================
# 1. NEVER commit .env file to Git
# 2. Add .env to .gitignore
# 3. Use strong JWT_ACCESS_SECRET (min 32 characters)
# 4. For production, use SendGrid or AWS SES (not Gmail)
# 5. Keep API keys secure and rotate them regularly

# ========================================
# QUICK SETUP GUIDE
# ========================================
# 1. Copy this file: cp env.example.txt .env
# 2. Edit .env and fill in your values
# 3. For Gmail: Setup App Password
# 4. For SendGrid: Create account → Verify sender → Get API key
# 5. Run: npm install
# 6. Run: npm run dev
# 7. Test API: POST http://localhost:5000/api/auth/forgot-password

# ========================================
# FOR PRODUCTION DEPLOYMENT
# ========================================
# 1. Set NODE_ENV=production
# 2. Use MongoDB Atlas (cloud database)
# 3. Use SendGrid (not Gmail)
# 4. Set strong JWT_ACCESS_SECRET
# 5. Set correct FRONTEND_URL (your domain)
# 6. Add these variables to your hosting platform (Railway, Render, etc.)

# ========================================
# TESTING COMMANDS
# ========================================
# Test email connection:
# node -e "import('./src/utils/emailService.js').then(m => m.testEmailConnection())"

# Generate JWT secret:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Seed root admin:
# npm run seed:root

